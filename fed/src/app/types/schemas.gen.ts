// This file is auto-generated by @hey-api/openapi-ts

export const $ApiBlockGridAreaModel = {
    type: 'object',
    properties: {
        alias: {
            type: 'string'
        },
        rowSpan: {
            type: 'integer',
            format: 'int32'
        },
        columnSpan: {
            type: 'integer',
            format: 'int32'
        },
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ApiBlockGridItemModel'
            }
        }
    },
    additionalProperties: false
} as const;

export const $ApiBlockGridItemModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/ApiBlockItemModel'
        }
    ],
    properties: {
        rowSpan: {
            type: 'integer',
            format: 'int32'
        },
        columnSpan: {
            type: 'integer',
            format: 'int32'
        },
        areaGridColumns: {
            type: 'integer',
            format: 'int32'
        },
        areas: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ApiBlockGridAreaModel'
            }
        }
    },
    additionalProperties: false
} as const;

export const $ApiBlockItemModel = {
    type: 'object',
    properties: {
        content: {
            '$ref': '#/components/schemas/IApiElementModel'
        },
        settings: {
            '$ref': '#/components/schemas/IApiElementModel'
        }
    },
    additionalProperties: false
} as const;

export const $ApiBlockListModel = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                oneOf: [
                    {
                        '$ref': '#/components/schemas/ApiBlockItemModel'
                    },
                    {
                        '$ref': '#/components/schemas/ApiBlockGridItemModel'
                    }
                ]
            }
        }
    },
    additionalProperties: false
} as const;

export const $ApiLinkModel = {
    type: 'object',
    properties: {
        url: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        queryString: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        title: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        target: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        destinationId: {
            type: 'string',
            format: 'uuid',
            nullable: true,
            readOnly: true
        },
        destinationType: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        route: {
            '$ref': '#/components/schemas/IApiContentRouteModel'
        },
        linkType: {
            '$ref': '#/components/schemas/LinkTypeModel'
        }
    },
    additionalProperties: false
} as const;

export const $BasePageElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/BasePagePropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $BasePagePropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        body: {
            '$ref': '#/components/schemas/RichTextModel'
        },
        keywords: {
            type: 'string',
            nullable: true
        },
        tags: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    }
} as const;

export const $CallToActionElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/CallToActionPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $CallToActionPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        link: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ApiLinkModel'
            },
            nullable: true
        },
        text: {
            '$ref': '#/components/schemas/RichTextModel'
        }
    }
} as const;

export const $HomePageContentModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/HomePagePropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $HomePageContentResponseModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentResponseModelBase'
        },
        {
            '$ref': '#/components/schemas/HomePageContentModel'
        }
    ],
    additionalProperties: false
} as const;

export const $HomePagePropertiesModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/BasePagePropertiesModel'
        }
    ]
} as const;

export const $HttpValidationProblemDetails = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/ProblemDetails'
        }
    ],
    properties: {
        errors: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    type: 'string'
                }
            }
        }
    },
    additionalProperties: {}
} as const;

export const $IApiContentModel = {
    type: 'object',
    oneOf: [
        {
            '$ref': '#/components/schemas/HomePageContentModel'
        },
        {
            '$ref': '#/components/schemas/OneColumnPageContentModel'
        },
        {
            '$ref': '#/components/schemas/TwoColumnPageContentModel'
        }
    ],
    additionalProperties: false
} as const;

export const $IApiContentModelBase = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        name: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        createDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        updateDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        route: {
            '$ref': '#/components/schemas/IApiContentRouteModel'
        },
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        contentType: {
            type: 'string',
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            readOnly: true
        }
    },
    additionalProperties: false,
    discriminator: {
        propertyName: 'contentType',
        mapping: {
            homePage: '#/components/schemas/HomePageContentModel',
            oneColumnPage: '#/components/schemas/OneColumnPageContentModel',
            twoColumnPage: '#/components/schemas/TwoColumnPageContentModel'
        }
    }
} as const;

export const $IApiContentResponseModel = {
    type: 'object',
    oneOf: [
        {
            '$ref': '#/components/schemas/HomePageContentResponseModel'
        },
        {
            '$ref': '#/components/schemas/OneColumnPageContentResponseModel'
        },
        {
            '$ref': '#/components/schemas/TwoColumnPageContentResponseModel'
        }
    ],
    additionalProperties: false
} as const;

export const $IApiContentResponseModelBase = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentModelBase'
        }
    ],
    properties: {
        cultures: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/IApiContentRouteModel'
            },
            readOnly: true
        },
        name: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        createDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        updateDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        route: {
            '$ref': '#/components/schemas/IApiContentRouteModel'
        },
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        contentType: {
            type: 'string',
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            readOnly: true
        }
    },
    additionalProperties: false,
    discriminator: {
        propertyName: 'contentType',
        mapping: {
            homePage: '#/components/schemas/HomePageContentResponseModel',
            oneColumnPage: '#/components/schemas/OneColumnPageContentResponseModel',
            twoColumnPage: '#/components/schemas/TwoColumnPageContentResponseModel'
        }
    }
} as const;

export const $IApiContentRouteModel = {
    type: 'object',
    properties: {
        path: {
            type: 'string',
            readOnly: true
        },
        startItem: {
            '$ref': '#/components/schemas/IApiContentStartItemModel'
        }
    },
    additionalProperties: false
} as const;

export const $IApiContentStartItemModel = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        path: {
            type: 'string',
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const $IApiElementModel = {
    type: 'object',
    oneOf: [
        {
            '$ref': '#/components/schemas/CallToActionElementModel'
        },
        {
            '$ref': '#/components/schemas/RichTextElementModel'
        },
        {
            '$ref': '#/components/schemas/BasePageElementModel'
        }
    ],
    additionalProperties: false
} as const;

export const $IApiElementModelBase = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        contentType: {
            type: 'string',
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            readOnly: true
        }
    },
    additionalProperties: false,
    discriminator: {
        propertyName: 'contentType',
        mapping: {
            callToAction: '#/components/schemas/CallToActionElementModel',
            richText: '#/components/schemas/RichTextElementModel',
            basePage: '#/components/schemas/BasePageElementModel'
        }
    }
} as const;

export const $IApiMediaWithCropsResponseModel = {
    type: 'object',
    properties: {
        path: {
            type: 'string',
            readOnly: true
        },
        createDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        updateDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        focalPoint: {
            '$ref': '#/components/schemas/ImageFocalPointModel'
        },
        crops: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ImageCropModel'
            },
            nullable: true,
            readOnly: true
        },
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        name: {
            type: 'string',
            readOnly: true
        },
        mediaType: {
            type: 'string',
            readOnly: true
        },
        url: {
            type: 'string',
            readOnly: true
        },
        extension: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        width: {
            type: 'integer',
            format: 'int32',
            nullable: true,
            readOnly: true
        },
        height: {
            type: 'integer',
            format: 'int32',
            nullable: true,
            readOnly: true
        },
        bytes: {
            type: 'integer',
            format: 'int32',
            nullable: true,
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const $ImageCropCoordinatesModel = {
    type: 'object',
    properties: {
        x1: {
            type: 'number',
            format: 'double'
        },
        y1: {
            type: 'number',
            format: 'double'
        },
        x2: {
            type: 'number',
            format: 'double'
        },
        y2: {
            type: 'number',
            format: 'double'
        }
    },
    additionalProperties: false
} as const;

export const $ImageCropModel = {
    type: 'object',
    properties: {
        alias: {
            type: 'string',
            nullable: true
        },
        width: {
            type: 'integer',
            format: 'int32'
        },
        height: {
            type: 'integer',
            format: 'int32'
        },
        coordinates: {
            '$ref': '#/components/schemas/ImageCropCoordinatesModel'
        }
    },
    additionalProperties: false
} as const;

export const $ImageFocalPointModel = {
    type: 'object',
    properties: {
        left: {
            type: 'number',
            format: 'double'
        },
        top: {
            type: 'number',
            format: 'double'
        }
    },
    additionalProperties: false
} as const;

export const $LinkTypeModel = {
    enum: ['Content', 'Media', 'External'],
    type: 'string'
} as const;

export const $OneColumnPageContentModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/OneColumnPagePropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $OneColumnPageContentResponseModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentResponseModelBase'
        },
        {
            '$ref': '#/components/schemas/OneColumnPageContentModel'
        }
    ],
    additionalProperties: false
} as const;

export const $OneColumnPagePropertiesModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/BasePagePropertiesModel'
        }
    ],
    properties: {
        components: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        }
    }
} as const;

export const $PagedIApiContentResponseModel = {
    required: ['items', 'total'],
    type: 'object',
    properties: {
        total: {
            type: 'integer',
            format: 'int64'
        },
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiContentResponseModel'
            }
        }
    },
    additionalProperties: false
} as const;

export const $PagedIApiMediaWithCropsResponseModel = {
    required: ['items', 'total'],
    type: 'object',
    properties: {
        total: {
            type: 'integer',
            format: 'int64'
        },
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiMediaWithCropsResponseModel'
            }
        }
    },
    additionalProperties: false
} as const;

export const $ProblemDetails = {
    type: 'object',
    properties: {
        type: {
            type: 'string',
            nullable: true
        },
        title: {
            type: 'string',
            nullable: true
        },
        status: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        detail: {
            type: 'string',
            nullable: true
        },
        instance: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: {}
} as const;

export const $RichTextElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/RichTextPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $RichTextModel = {
    type: 'object',
    properties: {
        markup: {
            type: 'string'
        },
        blocks: {
            type: 'array',
            items: {
                oneOf: [
                    {
                        '$ref': '#/components/schemas/ApiBlockItemModel'
                    },
                    {
                        '$ref': '#/components/schemas/ApiBlockGridItemModel'
                    }
                ]
            }
        }
    },
    additionalProperties: false
} as const;

export const $RichTextPropertiesModel = {
    type: 'object',
    properties: {
        text: {
            '$ref': '#/components/schemas/RichTextModel'
        }
    }
} as const;

export const $TwoColumnPageContentModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/TwoColumnPagePropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $TwoColumnPageContentResponseModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentResponseModelBase'
        },
        {
            '$ref': '#/components/schemas/TwoColumnPageContentModel'
        }
    ],
    additionalProperties: false
} as const;

export const $TwoColumnPagePropertiesModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/BasePagePropertiesModel'
        }
    ],
    properties: {
        aside: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        }
    }
} as const;